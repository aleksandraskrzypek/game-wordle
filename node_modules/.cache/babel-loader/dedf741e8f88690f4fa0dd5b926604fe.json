{"ast":null,"code":"var _jsxFileName = \"/home/ola/Desktop/frontend/gra-slowa/gra/src/Gra.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./style.css\";\nimport { slownikTab } from \"./slownik.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gra() {\n  _s();\n\n  const [haslo, setHaslo] = useState('');\n  const [slowoGracza, setSlowoGracza] = useState('');\n  const [tablica, setTablica] = useState([{\n    backgroundColor: \"white\"\n  }, {\n    backgroundColor: \"white\"\n  }, {\n    backgroundColor: \"white\"\n  }, {\n    backgroundColor: \"white\"\n  }, {\n    backgroundColor: \"white\"\n  }]);\n  const [litera, setLitera] = useState('');\n  const [litera2, setLitera2] = useState('');\n  const [litera3, setLitera3] = useState('');\n  const [litera4, setLitera4] = useState('');\n  const [litera5, setLitera5] = useState('');\n  const [step, setStep] = useState(0); //   const tablica = [{ \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }];\n  //  const kolor = ({ \"backgroundColor\": \"white\" });\n\n  const losowanie = () => {\n    setHaslo(slownikTab[Math.floor(Math.random() * slownikTab.length)]);\n    setStep(step + 1);\n    console.log(haslo);\n  };\n\n  useEffect(() => {\n    setSlowoGracza(litera + litera2 + litera3 + litera4 + litera5);\n  });\n\n  const sprawdz = () => {\n    litery(slowoGracza, haslo, tablica);\n  };\n\n  const litery = (slowo, haslo, tablica) => {\n    for (var i = 0; i < slowo.length; i++) {\n      for (var j = 0; j < haslo.length; j++) {\n        if (slowo.charAt(i) === haslo.charAt(j)) {\n          console.log(\"jest równe! pomaranczowe\");\n          tablica[i] = {\n            backgroundColor: \"orange\"\n          };\n          setTablica([...tablica]);\n        }\n      }\n\n      if (slowo.charAt(i) === haslo.charAt(i)) {\n        console.log(\"jest równe, zielone\");\n        tablica[i] = {\n          backgroundColor: \"green\"\n        };\n        setTablica([...tablica]);\n        console.log(tablica[i]);\n      }\n    }\n\n    console.log(tablica);\n    return tablica;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gra-head\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-losowanie\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: losowanie,\n        className: \"button-losuj\",\n        children: \"Losuj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), (() => {\n      if (step === 1) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: \"1\",\n            className: \"input\",\n            type: \"text\",\n            value: litera,\n            onChange: e => setLitera(e.target.value),\n            style: tablica[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: \"1\",\n            className: \"input\",\n            type: \"text\",\n            value: litera2,\n            onChange: e => setLitera2(e.target.value),\n            style: tablica[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: \"1\",\n            className: \"input\",\n            type: \"text\",\n            value: litera3,\n            onChange: e => setLitera3(e.target.value),\n            style: tablica[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: \"1\",\n            className: \"input\",\n            type: \"text\",\n            value: litera4,\n            onChange: e => setLitera4(e.target.value),\n            style: tablica[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            maxLength: \"1\",\n            className: \"input\",\n            type: \"text\",\n            value: litera5,\n            onChange: e => setLitera5(e.target.value),\n            style: tablica[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sprawdz,\n            className: \"button-zatwierdz\",\n            children: \"Zatwierd\\u017A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this);\n      }\n    })()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Gra, \"PFwKlIx8rR39lwzslP8QF4Ey8e4=\");\n\n_c = Gra;\nexport default Gra;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gra\");","map":{"version":3,"sources":["/home/ola/Desktop/frontend/gra-slowa/gra/src/Gra.js"],"names":["React","useEffect","useState","slownikTab","Gra","haslo","setHaslo","slowoGracza","setSlowoGracza","tablica","setTablica","backgroundColor","litera","setLitera","litera2","setLitera2","litera3","setLitera3","litera4","setLitera4","litera5","setLitera5","step","setStep","losowanie","Math","floor","random","length","console","log","sprawdz","litery","slowo","i","j","charAt","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport \"./style.css\"\nimport {slownikTab} from \"./slownik.js\"\n\nfunction Gra() {\n    const [haslo, setHaslo] = useState('');\n    const [slowoGracza, setSlowoGracza] = useState('');\n\n    const [tablica, setTablica] = useState([{ backgroundColor: \"white\" }, { backgroundColor: \"white\" }, { backgroundColor: \"white\" }, { backgroundColor: \"white\" }, { backgroundColor: \"white\" }]);\n\n    const [litera, setLitera] = useState('');\n    const [litera2, setLitera2] = useState('');\n    const [litera3, setLitera3] = useState('');\n    const [litera4, setLitera4] = useState('');\n    const [litera5, setLitera5] = useState('');\n\n    const [step, setStep] = useState(0);\n //   const tablica = [{ \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }];\n    \n   \n  //  const kolor = ({ \"backgroundColor\": \"white\" });\n\n    const losowanie = () => {\n    setHaslo(slownikTab[Math.floor(Math.random() * slownikTab.length)]);\n    setStep(step + 1);\n    console.log(haslo)\n    }\n\n    useEffect(() => {\n        setSlowoGracza(litera + litera2 + litera3 + litera4 + litera5);\n      });\n    \n    const sprawdz = () => {\n        litery(slowoGracza, haslo, tablica);\n    }\n\n    const litery = (slowo, haslo, tablica) => {\n        for (var i = 0; i < slowo.length; i++) {\n            for (var j = 0; j < haslo.length; j++){\n                if (slowo.charAt(i) === haslo.charAt(j)){\n                    console.log(\"jest równe! pomaranczowe\");\n                    tablica[i] = ({ backgroundColor: \"orange\" });\n                    setTablica([...tablica]);\n                }\n            }\n\n            if (slowo.charAt(i) === haslo.charAt(i)){\n                console.log(\"jest równe, zielone\");\n                tablica[i] = { backgroundColor: \"green\" };\n                setTablica([...tablica]);\n                console.log(tablica[i]);\n            \n            } \n\n        }\n        console.log(tablica);\n        return tablica;\n    }\n\n\n    \n  \n\n  return (\n    <div className='gra-head'>\n        \n    <div className='div-losowanie'>\n        <button onClick={losowanie} className=\"button-losuj\">Losuj</button>\n    </div>\n\n\n    {(() => {\n         if (step===1) {\n            return (\n                <div className='inputs'>\n                    <input\n                        maxLength=\"1\"\n                        className='input'\n                        type=\"text\"\n                        value= {litera}\n                        onChange={e => setLitera(e.target.value)}\n                        style= { tablica[0] }\n                    />\n                    <input\n                        maxLength=\"1\"\n                        className='input'\n                        type=\"text\"\n                        value= {litera2}\n                        onChange={e => setLitera2(e.target.value)}\n                        style= { tablica[1] }\n                    />\n                    <input\n                        maxLength=\"1\"\n                        className='input'\n                        type=\"text\"\n                        value= {litera3}\n                        onChange={e => setLitera3(e.target.value)}\n                        style= { tablica[2] }\n                    />\n                    <input\n                        maxLength=\"1\"\n                        className='input'\n                        type=\"text\"\n                        value= {litera4}\n                        onChange={e => setLitera4(e.target.value)}\n                        style= { tablica[3] }\n                    />\n                    <input\n                        maxLength=\"1\"\n                        className='input'\n                        type=\"text\"\n                        value= {litera5}\n                        onChange={e => setLitera5(e.target.value)}\n                        style= { tablica[4] }\n                    />\n    \n\n                    <button onClick={sprawdz} className=\"button-zatwierdz\">Zatwierdź</button>\n                </div>\n            )\n        }\n    })()}\n\n\n   \n\n\n        \n\n    </div>\n  )\n}\n\nexport default Gra"]},"metadata":{},"sourceType":"module"}