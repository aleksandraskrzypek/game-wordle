{"ast":null,"code":"var _jsxFileName = \"/home/ola/Desktop/frontend/gra-slowa/gra/src/Gra.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./style.css\";\nimport { slownikTab } from \"./slownik.js\";\nimport RICIBs from 'react-individual-character-input-boxes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gra() {\n  _s();\n\n  const [haslo, setHaslo] = useState('');\n  const [slowoGracza, setSlowoGracza] = useState('');\n  const [odpowiedz, setOdpowiedz] = useState('');\n  const [tablica, setTablica] = useState([{\n    \"backgroundColor\": \"white\"\n  }, {\n    \"backgroundColor\": \"white\"\n  }, {\n    \"backgroundColor\": \"white\"\n  }, {\n    \"backgroundColor\": \"white\"\n  }, {\n    \"backgroundColor\": \"white\"\n  }]);\n  const index = 0; //  const kolor = ({ \"backgroundColor\": \"white\" });\n\n  const losowanie = () => {\n    setHaslo(slownikTab[Math.floor(Math.random() * slownikTab.length)]);\n  };\n\n  const sprawdz = () => {\n    if (slowoGracza.length < 5) {\n      setOdpowiedz(\"Hasło jest za krótkie\");\n    } else if (slowoGracza.length > 5) {\n      setOdpowiedz(\"Hasło jest zbyt długie\");\n    } else {\n      setOdpowiedz(\"Hasło jest OK\");\n      litery(slowoGracza, haslo, tablica);\n    }\n  };\n\n  const litery = (slowo, haslo, tablica) => {\n    for (var i = 0; i < slowo.length; i++) {\n      if (slowo.charAt(i) === haslo.charAt(i)) {\n        console.log(\"jest równe, zielone\"); //    let newArr = [];\n        //    newArr[i] = ({ \"backgroundColor\": \"green\" });\n        //    setTablica(newArr);\n        //    console.log(tablica[i]);\n      }\n\n      for (var j = 0; j < haslo.length; j++) {\n        if (slowo.charAt(i) === haslo.charAt(j)) {\n          console.log(\"jest równe! (pomaranczowe\");\n        }\n      }\n    }\n  };\n\n  const handleOutput = string => {\n    setSlowoGracza(string);\n  };\n\n  const proba = () => {\n    setTablica(...tablica[0], {\n      \"backgroundColor\": \"white\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gra-head\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gra-body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: losowanie,\n      children: \"Losuj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: haslo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sprawdz,\n      children: \"Zatwierd\\u017A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: odpowiedz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: slowoGracza\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RICIBs, {\n      amount: 5,\n      autoFocus: true,\n      handleOutputString: handleOutput,\n      inputProps: [{\n        style: tablica[0]\n      }, {\n        style: tablica[1]\n      }, {\n        style: tablica[2]\n      }, {\n        style: tablica[3]\n      }, {\n        style: tablica[4]\n      }],\n      inputRegExp: /^[a-z]$/\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: proba,\n      children: \"Proba\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Gra, \"S2TsBueGUnk7Yjon9vN/aZbwmmg=\");\n\n_c = Gra;\nexport default Gra;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gra\");","map":{"version":3,"sources":["/home/ola/Desktop/frontend/gra-slowa/gra/src/Gra.js"],"names":["React","useState","slownikTab","RICIBs","Gra","haslo","setHaslo","slowoGracza","setSlowoGracza","odpowiedz","setOdpowiedz","tablica","setTablica","index","losowanie","Math","floor","random","length","sprawdz","litery","slowo","i","charAt","console","log","j","handleOutput","string","proba","style"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport \"./style.css\"\nimport {slownikTab} from \"./slownik.js\"\nimport RICIBs from 'react-individual-character-input-boxes';\n\nfunction Gra() {\n    const [haslo, setHaslo] = useState('');\n    const [slowoGracza, setSlowoGracza] = useState('');\n    const [odpowiedz, setOdpowiedz] = useState('');\n\n    const [tablica, setTablica] = useState([{ \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }, { \"backgroundColor\": \"white\" }]);\n\n    const index = 0;\n   \n    \n   \n  //  const kolor = ({ \"backgroundColor\": \"white\" });\n\n    const losowanie = () => {\n    setHaslo(slownikTab[Math.floor(Math.random() * slownikTab.length)]);\n    }\n    \n    const sprawdz = () => {\n        if(slowoGracza.length < 5){\n            setOdpowiedz(\"Hasło jest za krótkie\")\n        } else if(slowoGracza.length > 5){\n            setOdpowiedz(\"Hasło jest zbyt długie\")\n        } else{\n            setOdpowiedz(\"Hasło jest OK\");\n            litery(slowoGracza, haslo, tablica);\n        } \n    }\n\n    const litery = (slowo, haslo, tablica) => {\n        for (var i = 0; i < slowo.length; i++) {\n            if (slowo.charAt(i) === haslo.charAt(i)){\n                console.log(\"jest równe, zielone\");\n                \n            //    let newArr = [];\n            //    newArr[i] = ({ \"backgroundColor\": \"green\" });\n            //    setTablica(newArr);\n\n            //    console.log(tablica[i]);\n            \n            } \n            for (var j = 0; j < haslo.length; j++){\n                if (slowo.charAt(i) === haslo.charAt(j)){\n                    console.log(\"jest równe! (pomaranczowe\");\n                }\n            }\n        }\n    }\n    \n   \n    const handleOutput = (string) => {\n        setSlowoGracza(string)\n    }\n\n    const proba = () => {\n        setTablica(...tablica[0], { \"backgroundColor\": \"white\" });\n      }\n      \n\n\n\n\n\n\n  return (\n    <div className='gra-head'>\n        <div className='gra-body'>\n\n        </div>\n\n    <button onClick={losowanie}>Losuj</button>\n\n    <h1>{haslo}</h1>\n\n   \n    <button onClick={sprawdz}>Zatwierdź</button>\n   \n    <h1>{odpowiedz}</h1>\n\n    <h1>{slowoGracza}</h1>\n\n\n    <RICIBs\n        amount={5}\n        autoFocus\n        handleOutputString={handleOutput}\n        inputProps={[\n            { style: tablica[0] },\n            { style: tablica[1]},\n            { style: tablica[2]},\n            { style: tablica[3]},\n            { style: tablica[4]}\n        ]}\n        inputRegExp={/^[a-z]$/}\n    />\n\n    <button onClick={proba}>Proba</button>\n        \n\n    </div>\n  )\n}\n\nexport default Gra"]},"metadata":{},"sourceType":"module"}